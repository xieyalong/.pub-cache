library;
import self as self;
import "dart:core" as core;

abstract class Foo<T extends core::Object = dynamic> extends core::Object {
  synthetic constructor •() → self::Foo<self::Foo::T>
    : super core::Object::•()
    ;
  abstract get list() → core::List<self::Foo::T>;
  abstract method setList<T extends core::Object = dynamic>(core::List<self::Foo::setList::T> value) → void;
}
class Bar extends core::Object implements self::Foo<core::int> {
  field core::List<core::int> list = null;
  synthetic constructor •() → self::Bar
    : super core::Object::•()
    ;
  method setList<int extends core::Object = dynamic>(core::List<self::Bar::setList::int> value) → void {
    this.{self::Bar::list} = value;
  }
}
